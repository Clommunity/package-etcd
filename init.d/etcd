#!/bin/bash
#
### BEGIN INIT INFO
# Provides:          etcd
# Required-Start:    $local_fs $remote_fs $network $syslog $named 
# Required-Stop:     $local_fs $remote_fs $network $syslog $named 
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# X-Interactive:     true
# Short-Description: Start/Stop A highly-available key value store for shared configuration and service discovery
### END INIT INFO

NAME=etcd
ETCDPATH="/opt/etcd"
ETCDBIN="$ETCDPATH/$NAME"
CONFFILE="/etc/avahi-ps-etcd.conf"
PIDFILE="/var/run/etcd.pid"
CURL="/usr/bin/curl"

BIND_IP="0.0.0.0"
MACHINE="$(uname -n)"
OPTS=""
SERVER_ETCD_BASE="127.0.0.1:4001"
ETCD_PEER_PORT="7001"
ETCD_PEER_PORT_2="2380"
ETCD_PORT="4001"
ETCD_LOG="/dev/null"
ETCD_HTTP_PROTO="http://"

GTCONF="/etc/getinconf-client.conf"

test -f $GTCONF && . $GTCONF || exit 0

PUBLIC_DEVICE=${INTERNAL_DEV}
PUBLIC_IP=$(ip addr show dev $PUBLIC_DEVICE|grep "global $PUBLIC_DEVICE\$"|awk '{print $2}'|awk -F "/" {'print $1'})

test -f $CONFFILE && . $CONFFILE

[ -z "$ETCD_CONNECT" ] &&  PEERS="" || PEERS="$ETCD_CONNECT"

wlog() {
  echo "$@" >> $ETCD_LOG
}
httpcall(){
  wlog "$CURL $@"
  ${CURL} "$@"
}
remove_node() {
  # Remove etcd database
  rm -rf ${ETCDPATH}/machines/${MACHINE}
  # Get information
  my_node=($(httpcall -s http://${PEERS}/v2/members|jq .members[]| jq -c '[.name,.id,.peerURLs[]]'|sed 's/^\[\(.*\)\]$/\1/'|sed 's/,/ /g'|grep \"${ETCD_HTTP_PROTO}${PUBLIC_IP}:${ETCD_PEER_PORT_2}\"))
  [ ! -z "$my_node" ] && {
    wlog "remove_node: ${my_node[@]}"
    # Need delete node.
    hash_node=$(echo ${my_node[1]}|sed 's/^"\(.*\)"$/\1/')
    httpcall -s http://${PEERS}/v2/members/${hash_node} -X DELETE
  } || {
    wlog "remove_node: no nodes" 
  } 
}

add_node(){
  # Get node in cluster
  getnodes="$(echo $(httpcall -s http://${PEERS}/v2/members|jq .members[]| jq -c '[.name,.peerURLs[]]'|sed 's/^\["\(.*\)","\(.*\)"\]$/\1=\2/')|sed 's/ /,/g')"
  wlog "add_node: $getnodes"
  # Add node to cluster
  httpdata='{"peerURLs":["'${ETCD_HTTP_PROTO}${PUBLIC_IP}':'${ETCD_PEER_PORT_2}'"]}'
  httpcall -s http://${PEERS}/v2/members -X POST -H "Content-Type: application/json" -d $httpdata >> $ETCD_LOG
  # Return 
  wlog "add_node: ${MACHINE}=http://${PUBLIC_IP}:${ETCD_PEER_PORT_2},$getnodes"
  echo "${MACHINE}=${ETCD_HTTP_PROTO}${PUBLIC_IP}:${ETCD_PEER_PORT_2},$getnodes"
}

start() {
  [ ! -f $ETCDBIN ] && { echo "etcd is not installed in $ETCDBIN."; exit 1; }

  [ ! -z "$(pidof $NAME)" ] && { echo "$NAME is running."; exit 2; }
 
  remove_node
  mkdir -p $ETCDPATH/machines/${MACHINE}

  export ETCD_INITIAL_CLUSTER="$(add_node)"
  export ETCD_INITIAL_CLUSTER_STATE=existing
  export ETCD_NAME="${MACHINE}"

  $ETCDBIN -initial-advertise-peer-urls http://${PUBLIC_IP}:${ETCD_PEER_PORT_2} -listen-peer-urls=http://${BIND_IP}:${ETCD_PEER_PORT_2},http://${BIND_IP}:${ETCD_PEER_PORT} -listen-client-urls=http://${BIND_IP}:2379,http://${BIND_IP}:${ETCD_PORT} -data-dir=$ETCDPATH/machines/${MACHINE} >> $ETCD_LOG 2>&1 &
  echo $! > $PIDFILE  
}
stop() {
  kill -9 $(cat $PIDFILE)
  rm $PIDFILE
}
restart() {
  stop
  sleep 0.5
  start
}

case "$1" in
  start)
    start
  ;;
  stop)
    stop
  ;;
  restart)
    restart
  ;;
  *)
    echo "Usage: /etc/init.d/$NAME {start|stop|restart}"
    exit 1
  ;;
esac

exit 0


